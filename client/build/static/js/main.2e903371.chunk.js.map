{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","loader","width","marginTop","spacing","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","App","React","useState","_firstName","setFirstName","_lastName","setLastName","_users","setUsers","_query","setQuery","_image","setImage","_currentSelectedItemId","setCurrentSelectedItemId","_isLoading","setIsLoading","_idList","setIdList","open","setOpen","sizes","setSizes","openEditor","setOpenEditor","classes","updateDimensions","w","window","d","document","documentElement","body","getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight","fetchData","axios","get","then","res","data","useEffect","addEventListener","removeEventListener","Dialog","AppBar","className","appBar","Toolbar","IconButton","edge","onClick","Close","Typography","variant","style","margin","List","ListItem","button","TextField","value","id","label","onChange","e","target","Divider","type","reader","FileReader","onload","result","readAsDataURL","files","undefined","length","objectFit","src","Button","transform","marginBottom","autoFocus","console","log","indexOf","post","firstName","lastName","img","affectedRows","Swal","fire","text","icon","confirmButtonText","catch","err","Add","noWrap","map","Delete","Search","InputBase","placeholder","input","inputProps","LinearProgress","user","nome","split","ListItemAvatar","Avatar","alt","ListItemText","primary","ListItemSecondaryAction","Checkbox","toString","includes","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e903371.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { Search, Delete, Close, Add } from \"@material-ui/icons\";\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {\n  List,\n  Button,\n  Dialog,\n  InputBase,\n  Typography,\n  IconButton,\n  Toolbar,\n  AppBar,\n  Avatar,\n  Checkbox,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  TextField,\n  ListItem\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  loader: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(6.7),\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction App() {\n  const [_firstName, setFirstName] = React.useState(\"\");\n  const [_lastName, setLastName] = React.useState(\"\");\n  const [_users, setUsers] = React.useState([]);\n  const [_query, setQuery] = React.useState(\"\");\n  const [_image, setImage] = React.useState(\"\");\n  const [_currentSelectedItemId, setCurrentSelectedItemId] = React.useState(\"\");\n  const [_isLoading, setIsLoading] = React.useState(false)\n  const [_idList, setIdList] = React.useState([]);\n\n  const [open, setOpen] = React.useState(false);\n  const [sizes, setSizes] = React.useState({});\n  const [openEditor, setOpenEditor] = React.useState(false);\n\n\n  const classes = useStyles();\n  const updateDimensions = () => {\n    var w = window,\n      d = document,\n      documentElement = d.documentElement,\n      body = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || documentElement.clientWidth || body.clientWidth,\n      height = w.innerHeight || documentElement.clientHeight || body.clientHeight;\n    setSizes({ 'width': width, 'height': height, 'offsetX': width / 12 })\n  }\n\n  const fetchData = () => {\n    axios.get(\"http://localhost:3001/query/\" + _query).then((res) => {\n      setUsers(res.data);\n    });\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [_query]);\n\n  useEffect(() => {\n\n    window.addEventListener(\"resize\", updateDimensions)\n    updateDimensions()\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    }\n\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <div>\n          <Dialog open={openEditor}>\n            <AppBar className={classes.appBar}>\n              <Toolbar>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={() => {\n                    setOpenEditor(false);\n                  }}\n                  aria-label=\"close\"\n                >\n                  <Close />\n                </IconButton>\n\n                <Typography variant=\"h6\" className={classes.title}>\n                  Editar registro\n                </Typography>\n              </Toolbar>\n            </AppBar>\n\n            <div style={{ margin: \"auto\" }}>\n              <List>\n                <ListItem style={{ justifyContent: \"center\" }} button>\n                  <TextField\n                    value={_firstName}\n                    id=\"standard-basic\"\n                    label=\"Primeiro nome\"\n                    onChange={(e) => {\n                      setFirstName(e.target.value);\n                    }}\n                  />\n\n                  <TextField\n                    id=\"standard-basic\"\n                    value={_lastName}\n                    label=\"Último nome\"\n                    style={{ marginLeft: \"2%\" }}\n                    onChange={(e) => {\n                      setLastName(e.target.value);\n                    }}\n                  />\n                </ListItem>\n                <Divider />\n                <ListItem style={{ justifyContent: \"center\", marginTop: \"2%\" }}>\n                  <input\n                    id=\"photo\"\n                    type=\"file\"\n                    style={{ marginTop: \"1%\" }}\n                    onChange={(e) => {\n                      let reader = new FileReader();\n                      reader.onload = (e) => {\n                        setImage(e.target.result);\n                      };\n                      reader.readAsDataURL(e.target.files[0]);\n                    }}\n                  />\n                </ListItem>\n                <Divider style={{ marginTop: \"2%\" }} />\n                <ListItem style={{ marginTop: \"2%\" }}>\n                  {_image !== undefined && _image.length > 0 && (\n                    <img style={{ objectFit: \"cover\", width: \"20%\", margin: \"auto\", marginTop: \"3%\" }} src={_image} />\n                  )}\n                </ListItem>\n              </List>\n              <Button\n                style={{\n                  backgroundColor: \"#3f51b5\",\n                  color: \"#fff\",\n                  transform: \"translateX(50%)\",\n                  width: \"50%\",\n                  marginTop: \"5%\",\n                  marginBottom: \"5%\"\n                }}\n                autoFocus\n                color=\"inherit\"\n                onClick={() => {\n                  console.log(_image)\n                  if (_firstName.length > 0 && _lastName.length > 0 && _image.length > 0 && _image.indexOf(\"image\") != -1) {\n                    axios\n                      .post(\"http://localhost:3001/update\", {\n                        id: _currentSelectedItemId,\n                        firstName: _firstName,\n                        lastName: _lastName,\n                        img: _image,\n                      })\n                      .then((res) => {\n                        if (res.data[0].affectedRows > 0) {\n                          Swal.fire({\n                            title: \"Sucesso!\",\n                            text: \"Registro alterado com sucesso!\",\n                            icon: \"success\",\n                            confirmButtonText: \"OK!\",\n                          }).then(() => {\n                            fetchData()\n                          })\n                        } else {\n                          Swal.fire({\n                            title: \"Erro!\",\n                            text: \"Falha ao tentar atualizar registro.\",\n                            icon: \"error\",\n                            confirmButtonText: \"OK!\",\n                          });\n                        }\n                      })\n                      .catch((err) => {\n                        console.log(err);\n                      });\n                    setImage(\"\");\n                    setLastName(\"\");\n                    setFirstName(\"\");\n                    setOpenEditor(false);\n                  }\n                  else {\n                    setOpen(false)\n                    Swal.fire({\n                      title: \"Erro!\",\n                      text: \"Falha ao tentar atualizar registro, verifique os campos e tente novamente. Formatos de imagem aceitos: (GIF, PNG, JPEG, JPG)\",\n                      icon: \"error\",\n                      confirmButtonText: \"OK!\",\n                    })\n                  }\n                }}\n              >\n                Salvar\n              </Button>\n            </div>\n          </Dialog>\n        </div>\n        <Dialog open={open}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n                aria-label=\"close\"\n              >\n                <Close />\n              </IconButton>\n\n              <Typography variant=\"h6\" className={classes.title}>\n                Criar novo registro\n              </Typography>\n            </Toolbar>\n          </AppBar>\n\n          <div style={{ margin: \"auto\" }}>\n            <List>\n              <ListItem style={{ justifyContent: \"center\" }} button>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Primeiro nome\"\n                  onChange={(e) => {\n                    setFirstName(e.target.value);\n                  }}\n                />\n\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Último nome\"\n                  style={{ marginLeft: \"2%\" }}\n                  onChange={(e) => {\n                    setLastName(e.target.value);\n                  }}\n                />\n              </ListItem>\n              <Divider />\n              <ListItem style={{ justifyContent: \"center\", marginTop: \"2%\" }}>\n                <input\n                  id=\"photo\"\n                  type=\"file\"\n                  style={{ marginTop: \"1%\" }}\n                  onChange={(e) => {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                      setImage(e.target.result);\n                    };\n                    reader.readAsDataURL(e.target.files[0]);\n                  }}\n                />\n              </ListItem>\n              <Divider style={{ marginTop: \"2%\" }} />\n              <ListItem style={{ marginTop: \"2%\" }}>\n                {_image !== undefined && _image.length > 0 && (\n                  <img style={{ objectFit: \"cover\", width: \"20%\", margin: \"auto\", marginTop: \"3%\" }} src={_image} />\n                )}\n              </ListItem>\n            </List>\n            <Button\n              style={{\n                backgroundColor: \"#3f51b5\",\n                color: \"#fff\",\n                transform: \"translateX(50%)\",\n                width: \"50%\",\n                marginTop: \"5%\",\n                marginBottom: \"5%\"\n              }}\n              autoFocus\n              color=\"inherit\"\n              onClick={() => {\n                console.log(_image)\n                if (_firstName.length > 0 && _lastName.length > 0 && _image.length > 0 && _image.indexOf(\"image\") != -1) {\n                  axios\n                    .post(\"http://localhost:3001/insert\", {\n                      firstName: _firstName,\n                      lastName: _lastName,\n                      img: _image,\n                    })\n                    .then((res) => {\n                      if (res.data[0].affectedRows > 0) {\n                        Swal.fire({\n                          title: \"Sucesso!\",\n                          text: \"Você se cadastrou com sucesso.\",\n                          icon: \"success\",\n                          confirmButtonText: \"OK!\",\n                        }).then(() => {\n                          fetchData()\n                        })\n                      } else {\n                        Swal.fire({\n                          title: \"Erro!\",\n                          text: \"Falha ao se registrar.\",\n                          icon: \"error\",\n                          confirmButtonText: \"OK!\",\n                        });\n                      }\n                    })\n                    .catch((err) => {\n                      console.log(err);\n                    });\n                  setImage(\"\");\n                  setLastName(\"\");\n                  setFirstName(\"\");\n                  setOpen(false);\n                }\n                else {\n                  setOpen(false)\n                  Swal.fire({\n                    title: \"Erro!\",\n                    text: \"Falha ao se registrar, verifique os campos e tente novamente. Formatos de imagem aceitos: (GIF, PNG, JPEG, JPG)\",\n                    icon: \"error\",\n                    confirmButtonText: \"OK!\",\n                  })\n                }\n              }}\n            >\n              Salvar\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n\n      <div className={classes.root}>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <IconButton\n              onClick={() => {\n                setOpen(true);\n              }}\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <Add />\n            </IconButton>\n\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              CRUD\n            </Typography>\n            {_idList.length > 0 && (\n              <IconButton\n                onClick={() => {\n                  setIsLoading(true)\n                  _idList.map((id) => {\n                    axios.post(\"http://localhost:3001/delete\", {\n                      id: id\n                    })\n                      .then((res) => {\n                        if (res.data[0].affectedRows > 0) {\n                          setIsLoading(false)\n                          fetchData()\n                        }\n                        else {\n                          Swal.fire({\n                            title: \"Erro!\",\n                            text: \"Falha ao deletar.\",\n                            icon: \"error\",\n                            confirmButtonText: \"OK!\",\n                          });\n                        }\n                      })\n                      .catch((err) => {\n                        Swal.fire({\n                          title: \"Erro!\",\n                          text: \"Falha ao deletar.\",\n                          icon: \"error\",\n                          confirmButtonText: \"OK!\",\n                        });\n                      })\n                  })\n                  setIdList([])\n                }}\n                edge=\"end\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n              >\n                <Delete />\n              </IconButton>\n            )}\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <Search />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(e) => {\n                  setQuery(e.target.value);\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n      {\n        _isLoading &&\n        <div className={classes.loader}>\n          <LinearProgress />\n          <LinearProgress color=\"secondary\" />\n        </div>\n      }\n      <List style={{ marginTop: sizes.width > 768 && !_isLoading ? \"5%\" : (!_isLoading ? \"12%\" : \"0%\") }} >\n        {\n          _users.length > 0\n          &&\n          <>\n            {\n              _users.map((user) => (\n                <ListItem key={user.id} button onClick={(e) => {\n                  setCurrentSelectedItemId(user.id)\n                  axios.get(\"http://localhost:3001/query/\" + user.id)\n                    .then((res) => {\n                      setImage(res.data[0].img)\n                      setFirstName(res.data[0].nome.split(' ')[0])\n                      setLastName(res.data[0].nome.split(' ')[1])\n                      setOpenEditor(true)\n                    })\n                }}>\n                  <ListItemAvatar>\n                    <Avatar alt={user.nome} src={user.img} />\n                  </ListItemAvatar>\n                  <ListItemText primary={user.nome} />\n                  <ListItemSecondaryAction>\n                    <Checkbox\n                      id={user.id.toString()}\n                      color=\"primary\"\n                      edge=\"end\"\n                      onChange={(e) => {\n                        if (_idList.includes(e.target.id)) {\n                          setIdList(_idList.filter(id => id != e.target.id))\n                        }\n                        else {\n                          setIdList([..._idList, e.target.id])\n                        }\n                      }}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))\n            }\n          </>\n        }\n        {\n          _users.length == 0\n          &&\n          <ListItem key={\"1\"} button>\n            <ListItemText primary={\"Nenhum registro foi encontrado )=\"} />\n          </ListItem>\n        }\n      </List>\n    </div >\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}